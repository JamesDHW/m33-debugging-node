import Head from "next/head";
import { Inter } from "next/font/google";
import { useRouter } from "next/router";
import { Dispatch, SetStateAction, useEffect, useState } from "react";
import { ParsedUrlQuery } from "querystring";

const inter = Inter({ subsets: ["latin"] });
const format = (json: ParsedUrlQuery) => JSON.stringify(json, null, 4);

type QueryString = string | string[] | undefined;
const useStateFromQueryString = (
  stateSelector: (query: ParsedUrlQuery) => QueryString
): [QueryString, Dispatch<SetStateAction<QueryString>>] => {
  const router = useRouter();
  const [state, setState] = useState<QueryString>();

  useEffect(() => {
    if (router.isReady) setState(stateSelector(router.query));
  }, [router.isReady, router.query, stateSelector]);

  return [state, setState];
};

export default function Home() {
  const { query } = useRouter();

  // useState here doesn't work as page uses SSG which is due to the
  // absence of getServerSideProps or getInitialProps on the page
  const [params] = useState(query);

  console.log({ query, params });

  // useStateFromQueryString works as we wait until router.isReady on the client
  const [customHookState] = useStateFromQueryString(({ tab }) => tab);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1 className={inter.className} style={{ margin: 50 }}>
          Query params (useRouter): {format(query)}
        </h1>
        <h1 className={inter.className} style={{ margin: 50 }}>
          Query params (useRouter initialises useState): {format(params)}
        </h1>
        <h1 className={inter.className} style={{ margin: 50 }}>
          customHookState: {customHookState}
        </h1>
      </main>
    </>
  );
}
